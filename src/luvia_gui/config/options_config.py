categories = {'Cleaning':
              {'Blur Kernel': ('--blur_kernel', 'entry', '5,5', 'Kernel size for blurring'),
                'Blur Sigma': ('--blur_sigma', 'entry', '0', 'Sigma value for Gaussian blur'),
                'Block Size': ('--block_size', 'entry', '15', 'Block size for adaptive thresholding'),
                'VThresh C': ('--vthresh_C', 'entry', '3', 'Constant subtracted in adaptive thresholding'),
                'Min Area': ('--min_area', 'entry', '20', 'Minimum area for contour filtering'),
                'Max Area': ('--max_area', 'entry', '2000', 'Maximum area for contour filtering'),
                'Min Aspect': ('--min_aspect', 'entry', '0.1', 'Minimum aspect ratio'),
                'Max Aspect': ('--max_aspect', 'entry', '10.0', 'Maximum aspect ratio'),
                'Min Vertices': ('--min_vertices', 'entry', '6', 'Minimum number of vertices'),
                'Blur Kernel Size': ('--blur_kernel_size', 'entry', '5', 'Size of blur kernel'),
                'Canny Thresh 1': ('--canny_thresh1', 'entry', '50', 'First threshold for Canny edge detection'), 
                'Canny Thresh 2': ('--canny_thresh2', 'entry', '150', 'Second threshold for Canny edge detection'),
                'CC Min Area': ('--cc_min_area', 'entry', '20', 'Min area for connected components'),
                'CC Max Area': ('--cc_max_area', 'entry', '2000', 'Max area for connected components'),
                'Contour Min Area': ('--contour_min_area', 'entry', '20', 'Min area for contours'),
                'Contour Max Area': ('--contour_max_area', 'entry', '2000', 'Max area for contours'),
                'Contour Min Vertices': ('--contour_min_vertices', 'entry', '5', 'Min vertices for contours'),
                'Contour Max Vertices': ('--contour_max_vertices', 'entry', '0.001', 'Max vertices for contours')},
            'Hoof Horizontal': {'Sigma': ('--sigma', 'entry', '4', 'Sigma value'),
                'Separation Char': ('--separation_char', 'entry', '5', 'Character separation')},
            'Hoof Vertical': {'Hoof Mode': ('--hoofh_mode', 'dropdown', ['cca', 'threshold'], 'Mode for hoof segmentation'),
                              'Filter Angle': ('--filter_angle', 'checkbox', None, 'Filter by angle'),
                              'Min Area Segment': ('--min_area_segment', 'entry', '100', 'Minimum area for segments'),
                              'Dilation Kernel': ('--dilation_kernel', 'entry', '90,10', 'Kernel size for dilation'),
                              'Angle Tolerance': ('--angle_tolerance', 'entry', '15', 'Tolerance for angle filtering'),
                              'Filter Boxes': ('--filter_boxes', 'dropdown', ['inside_box'], 'Box filtering mode'),
                              'Kernel Size': ('--kernel_size', 'entry', '150,20', 'Kernel size for morphological ops'),
                              'Iterations': ('--iterations', 'entry', '1', 'Number of iterations')},
            'Straw': {'Inference Mode': ('--infer_mode', 'dropdown', ['diverse_beam'], 'Inference mode'),
                      'Length Norm': ('--length_norm', 'checkbox', True, 'Enable length normalization'),
                      'Beam Width': ('--beam_width', 'entry', '3', 'Beam width'),
                      'Num Groups': ('--num_groups', 'entry', '3', 'Number of groups'),
                      'Diversity Strength': ('--diversity_strength', 'entry', '0.5', 'Diversity strength'),
                      'Top K': ('--top_k', 'entry', '0', 'Top-k sampling'), 'Top P': ('--top_p', 'entry', '0.9', 'Top-p sampling'),
                      'Temperature': ('--temperature', 'entry', '1.0', 'Sampling temperature'),
                      'K': ('--k', 'entry', '1', 'K value'),
                      'No Transform Input': ('--notransform_input', 'checkbox', None, 'Skip input transformation'),
                      }}